{"version":3,"sources":["ui/router/routes.ts","ui/components/header/Header.tsx","bll/bookmarks-reducer.ts","ui/components/bookmarksPage/bookmarksImage/BookmarksImage.tsx","ui/components/bookmarksPage/BookmarksPage.tsx","dal/api.ts","bll/image-reducer.ts","ui/common/pagination/PaginationRounded.tsx","ui/components/imagePage/imageContainer/imageItem/ImageItem.tsx","ui/components/imagePage/imageContainer/ImageContainer.tsx","ui/components/imagePage/prompt/Prompt.tsx","ui/components/imagePage/ImagePage.tsx","ui/components/searchForm/SearchForm.tsx","ui/common/customHook/use-debounce.ts","ui/components/photoFinderPage/PhotoFinderPage.tsx","ui/components/content/Content.tsx","ui/App.tsx","reportWebVitals.ts","bll/store.ts","bll/utils/localstorage-utils.ts","index.tsx","ui/components/imagePage/imageContainer/imageItem/ImageItem.module.css"],"names":["routes","Header","isSearching","useSelector","state","image","useState","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","onClick","event","currentTarget","Typography","AccountCircle","fontSize","style","marginLeft","LinearProgress","Menu","id","keepMounted","open","Boolean","onClose","to","MenuItem","initialState","bookmarksImage","removeImageAC","imageId","type","BookmarksImage","imageUrl","removeImage","valueTags","Grid","item","Paper","elevation","padding","className","s","photoBox","src","width","height","Button","size","startIcon","margin","BookmarksPage","bookmarksImageData","bookmarks","dispatch","useDispatch","container","spacing","justifyContent","map","instance","axios","create","baseURL","imageAPI","imageQueryParams","get","params","imageData","page","pages","perpage","total","photo","options","per_page","isShowImage","isSearchingAC","isShowImageAC","getCardsTC","getState","reduxOptions","then","res","data","photos","finally","PaginationRounded","count","onChangePage","Pagination","shape","onChange","ImageItem","secret","owner","server","farm","addImageFromBookmarks","title","removeImageFromBookmarks","changeButton","setChangeButton","React","setValueTags","TextField","label","multiline","disabled","maxRows","value","target","marginBottom","ImageContainer","photoData","addImageToBookmarksAC","setOptionsPageAC","Prompt","textAlign","ImagePage","SearchForm","searchTerm","setSearchTerm","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","text","e","PhotoFinderPage","Container","fixed","Content","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveState","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d4c64009.chunk.js","sourcesContent":["\r\nexport const routes = {\r\n    photoFinder: \"/\",\r\n    bookmarks: \"/bookmarks\"\r\n}","import React from 'react';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    LinearProgress,\r\n    Divider,\r\n    List,\r\n    Link,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Drawer,\r\n    Menu,\r\n    MenuItem\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {AccountCircle} from \"@material-ui/icons\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routes} from '../../router/routes';\r\n\r\nexport const Header = () => {\r\n    //HOOK\r\n    const isSearching = useSelector<AppRootStateType, boolean>(state => state.image.isSearching)\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Image Finder\r\n                    </Typography>\r\n                    <AccountCircle fontSize=\"large\" style={{marginLeft: \"auto\"}}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {isSearching && <LinearProgress color={\"secondary\"}/>}\r\n\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <NavLink to={routes.photoFinder}>\r\n                    <MenuItem onClick={handleClose}><CloudIcon/></MenuItem>\r\n                </NavLink>\r\n                <NavLink to={routes.bookmarks}>\r\n                    <MenuItem onClick={handleClose}><BookmarksIcon/></MenuItem>\r\n                </NavLink>\r\n            </Menu>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\"\r\nimport {AppRootStateType} from \"./store\"\r\n\r\nconst initialState = {\r\n    bookmarksImage: []\r\n}\r\n\r\nexport const bookmarksReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-IMAGE-TO-BOOKMARKS\":\r\n            return {\r\n                ...state,\r\n                bookmarksImage: [...state.bookmarksImage, {\r\n                    imageId: action.imageId,\r\n                    imageUrl: action.imageUrl,\r\n                    valueTags: action.valueTags\r\n                }]\r\n            }\r\n        case \"REMOVE-IMAGE\": {\r\n            return {...state, bookmarksImage: state.bookmarksImage.filter(item => item.imageId !== action.imageId)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const addImageToBookmarksAC = (imageId: string, imageUrl: string, valueTags: string) => ({\r\n    type: \"ADD-IMAGE-TO-BOOKMARKS\",\r\n    imageId,\r\n    imageUrl,\r\n    valueTags\r\n} as const)\r\nexport const removeImageAC = (imageId: string) => ({type: \"REMOVE-IMAGE\", imageId} as const)\r\n\r\n\r\n//Types\r\ntype InitialStateType = {\r\n    bookmarksImage: Array<ImageType>\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addImageToBookmarksAC> | ReturnType<typeof removeImageAC>\r\n\r\nexport type ImageType = {\r\n    imageId: string\r\n    imageUrl: string\r\n    valueTags: string\r\n}\r\n","import {Button, Grid, Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport s from '../../imagePage/imageContainer/imageItem/ImageItem.module.css'\r\n\r\ntype BookmarksImagePropsType = {\r\n    imageId: string,\r\n    imageUrl: string\r\n    valueTags: string\r\n    removeImage: (imageId: string) => void\r\n}\r\n\r\nexport const BookmarksImage: React.FC<BookmarksImagePropsType> = ({imageId, imageUrl, valueTags, removeImage}) => {\r\n\r\n    const onclickHandler = () => {\r\n        removeImage(imageId)\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <Paper elevation={3} style={{padding: \"10px\"}}>\r\n                <div className={s.photoBox}>\r\n                    <img src={imageUrl} width=\"250px\" height=\"200px\"/>\r\n                </div>\r\n                <div>\r\n                     <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            startIcon={<DeleteIcon/>}\r\n                            style={{margin: \"10px 0\"}}\r\n                            onClick={onclickHandler}\r\n                        >\r\n                            Remove it\r\n                        </Button>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {ImageType, removeImageAC} from '../../../bll/bookmarks-reducer';\r\nimport {BookmarksImage} from './bookmarksImage/BookmarksImage';\r\n\r\nexport const BookmarksPage = () => {\r\n\r\n    //HOOK\r\n    const bookmarksImageData = useSelector<AppRootStateType, Array<ImageType>>(state => state.bookmarks.bookmarksImage)\r\n    const dispatch = useDispatch()\r\n    \r\n    const removeImage = (imageId: string) => {\r\n        dispatch(removeImageAC(imageId))\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={5} style={{justifyContent: \"center\", padding: \"30px\"}}>\r\n            {bookmarksImageData.map(item => {\r\n                return <BookmarksImage key={item.imageId}\r\n                                       imageId={item.imageId}\r\n                                       imageUrl={item.imageUrl}\r\n                                       valueTags={item.valueTags}\r\n                                       removeImage={removeImage}\r\n                />\r\n            })}\r\n        </Grid>\r\n    )\r\n}","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.flickr.com/services/rest/?method=flickr.photos.search&format=json&nojsoncallback=true&api_key=0ec80156bc9022b05d6f61d04f799f84'\r\n})\r\n\r\nexport const imageAPI = {\r\n    getImage(imageQueryParams: ImageQueryParamsType) {\r\n        return instance.get<ImageResponseType, AxiosResponse<ImageResponseType>>('',{params:imageQueryParams})\r\n    }\r\n}\r\n\r\n//Types\r\nexport type ImageQueryParamsType = {\r\n    per_page?: number\r\n    page?: number\r\n    text?: string\r\n}\r\n\r\nexport type ImageResponseType = {\r\n    photos: PhotosType\r\n    stat: string\r\n}\r\n\r\nexport type PhotosType = {\r\n    page: number\r\n    pages: number\r\n    perpage: number\r\n    total: number\r\n    photo: Array<PhotoType>\r\n}\r\n\r\nexport type PhotoType = {\r\n    id: string\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    farm: number\r\n    title: string\r\n    ispublic: number\r\n    isfriend: number\r\n    isfamily: number\r\n}","import {Dispatch} from \"redux\"\r\nimport {imageAPI, ImageQueryParamsType, PhotosType} from \"../dal/api\"\r\nimport {AppRootStateType} from \"./store\"\r\n\r\nconst initialState = {\r\n    imageData: {\r\n        page: 1,\r\n        pages: 0,\r\n        perpage: 20,\r\n        total: 0,\r\n        photo: []\r\n    },\r\n    options: {per_page: 20},\r\n    isSearching: false,\r\n    isShowImage: false\r\n}\r\n\r\nexport const imageReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"GET-IMAGE\":\r\n            return {...state, imageData: action.data}\r\n        case \"SET-OPTIONS\":\r\n            return {...state, options: {...state.options, ...action.options}}\r\n        case \"SET-OPTIONS-PAGE\":\r\n            return {...state, options: {...state.options, page: action.page}}\r\n        case \"IS-SEARCHING\":\r\n            return {...state, isSearching: action.isSearching}\r\n        case \"IS-SHOW-IMAGE\":\r\n            return {...state, isShowImage: action.isShowImage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nconst getImageAC = (data: PhotosType) => ({type: \"GET-IMAGE\", data} as const)\r\nexport const setOptionsAC = (options: ImageQueryParamsType) => ({type: \"SET-OPTIONS\", options} as const)\r\nexport const setOptionsPageAC = (page: number) => ({type: \"SET-OPTIONS-PAGE\", page} as const)\r\nconst isSearchingAC = (isSearching: boolean) => ({type: \"IS-SEARCHING\", isSearching} as const)\r\nexport const isShowImageAC = (isShowImage: boolean) => ({type: \"IS-SHOW-IMAGE\", isShowImage} as const)\r\n\r\n//Thunks\r\nexport const getCardsTC = () => (dispatch: Dispatch<ActionType>, getState: () => AppRootStateType) => {\r\n    dispatch(isSearchingAC(true))\r\n\r\n    const reduxOptions = getState().image.options\r\n    imageAPI.getImage(reduxOptions)\r\n        .then(res => {\r\n            dispatch(getImageAC(res.data.photos))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isSearchingAC(false))\r\n            dispatch(isShowImageAC(true))\r\n        })\r\n}\r\n\r\n//Types\r\ntype InitialStateType = {\r\n    imageData: PhotosType\r\n    options: ImageQueryParamsType\r\n    isSearching: boolean\r\n    isShowImage: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof getImageAC>\r\n                | ReturnType<typeof setOptionsAC>\r\n                | ReturnType<typeof setOptionsPageAC>\r\n                | ReturnType<typeof isSearchingAC>\r\n                | ReturnType<typeof isShowImageAC>","import { Pagination } from '@material-ui/lab';\r\nimport React from 'react';\r\n\r\ntype PaginationRoundedPropsType = {\r\n    page: number\r\n    count: number\r\n    onChangePage: (page: number) => void\r\n} \r\n\r\nexport const PaginationRounded: React.FC<PaginationRoundedPropsType> = ({page, count, onChangePage}) => {\r\n    \r\n    const onChangeHandler = (event: object, page: number) => {\r\n        onChangePage(page)\r\n    }\r\n    \r\n    return (\r\n        <div style={{marginLeft: \"auto\"}}>\r\n            <Pagination count={count} shape=\"rounded\" onChange={onChangeHandler} page={page} />\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Button, Grid, Paper, TextField} from '@material-ui/core';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport s from './ImageItem.module.css';\r\n\r\n\r\ntype ImageItemPropsType = {\r\n    id: string\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    farm: number\r\n    title: string\r\n    addImageFromBookmarks: (imageId: string, imageUrl: string, valueTags: string) => void\r\n    removeImageFromBookmarks: (imageId: string) => void\r\n}\r\n\r\nexport const ImageItem: React.FC<ImageItemPropsType> = (\r\n    {id, owner, secret, server, farm, title, addImageFromBookmarks, removeImageFromBookmarks}\r\n) => {\r\n    //HOOK\r\n    const [changeButton, setChangeButton] = useState(true);\r\n    const [valueTags, setValueTags] = React.useState('');\r\n\r\n    const imageUrl = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`\r\n\r\n    const handleChangeTagsImput = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setValueTags(event.target.value);\r\n    };\r\n    \r\n    const onClickBookmarkButtonHandler = () => {\r\n        setChangeButton(false)\r\n        addImageFromBookmarks(id, imageUrl, valueTags);\r\n    }\r\n    const onClickRemoveButtonHandler = () => {\r\n        setChangeButton(true)\r\n        removeImageFromBookmarks(id)\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <Paper elevation={3} style={{padding: \"10px\"}}>\r\n                <div className={s.photoBox}>\r\n                    <img src={imageUrl} width=\"250px\" height=\"200px\"/>\r\n                </div>\r\n                <div>\r\n                    {changeButton\r\n                        ? <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<BookmarkBorderIcon/>}\r\n                            style={{margin: \"10px 0\"}}\r\n                            onClick={onClickBookmarkButtonHandler}\r\n                        >\r\n                            Bookmark it!\r\n                        </Button>\r\n                        : <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            startIcon={<DeleteIcon/>}\r\n                            style={{margin: \"10px 0\"}}\r\n                            onClick={onClickRemoveButtonHandler}\r\n                        >\r\n                            Remove it\r\n                        </Button>}\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        id=\"outlined-multiline-flexible\"\r\n                        label=\"some tags?\"\r\n                        multiline\r\n                        disabled={!changeButton}\r\n                        size=\"small\"\r\n                        maxRows={4}\r\n                        value={valueTags}\r\n                        onChange={handleChangeTagsImput}\r\n                        variant=\"outlined\"\r\n                        style={{marginBottom: \"10px\", width: \"100%\"}}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}","import {Grid} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addImageToBookmarksAC, removeImageAC} from '../../../../bll/bookmarks-reducer';\r\nimport {getCardsTC, setOptionsPageAC} from '../../../../bll/image-reducer';\r\nimport {AppRootStateType} from '../../../../bll/store';\r\nimport {PhotoType} from '../../../../dal/api';\r\nimport {PaginationRounded} from '../../../common/pagination/PaginationRounded';\r\nimport {ImageItem} from './imageItem/ImageItem';\r\n\r\nexport const ImageContainer = () => {\r\n\r\n    //HOOK\r\n    const photoData = useSelector<AppRootStateType, Array<PhotoType>>(state => state.image.imageData.photo)\r\n    const page = useSelector<AppRootStateType, number>(state => state.image.imageData.page)\r\n    const pages = useSelector<AppRootStateType, number>(state => state.image.imageData.pages)\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setOptionsPageAC(page))\r\n        dispatch(getCardsTC())\r\n    }\r\n\r\n    const addImageFromBookmarks = (imageId: string, imageUrl: string, valueTags: string) => {\r\n        dispatch(addImageToBookmarksAC(imageId, imageUrl, valueTags))\r\n    }\r\n    \r\n    const removeImageFromBookmarks = (imageId: string) => {\r\n        dispatch(removeImageAC(imageId))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{marginBottom: \"30px\"}}>\r\n                <PaginationRounded page={page}\r\n                                   count={pages}\r\n                                   onChangePage={onChangePage}/>\r\n            </Grid>\r\n            <Grid container spacing={5} style={{justifyContent: \"center\"}}>\r\n                {photoData.map(item => {\r\n                    return (<ImageItem key={item.id}\r\n                                       id={item.id}\r\n                                       owner={item.owner}\r\n                                       secret={item.secret}\r\n                                       server={item.server}\r\n                                       farm={item.farm}\r\n                                       title={item.title}\r\n                                       addImageFromBookmarks={addImageFromBookmarks}\r\n                                       removeImageFromBookmarks={removeImageFromBookmarks}\r\n                    />)\r\n                })}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport const Prompt = () => {\r\n    return (\r\n            <Typography variant=\"h6\" color=\"primary\" style={{textAlign: \"center\"}}>\r\n                No images here. Would you try to search for anything else?\r\n            </Typography>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport { ImageContainer } from './imageContainer/ImageContainer';\r\nimport { Prompt } from './prompt/Prompt';\r\n\r\nexport const ImagePage = () => {\r\n    //HOOK\r\n    const isShowImage = useSelector<AppRootStateType, boolean>(state => state.image.isShowImage)\r\n    \r\n    return (\r\n        <>\r\n            {!isShowImage\r\n                ? <Prompt/>\r\n                : <ImageContainer/>\r\n            }\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCardsTC, isShowImageAC, setOptionsAC} from \"../../../bll/image-reducer\";\r\nimport {useDebounce} from \"../../common/customHook/use-debounce\";\r\nimport { AppRootStateType } from \"../../../bll/store\";\r\n\r\n\r\nexport const SearchForm = () => {\r\n\r\n    //HOOK\r\n    const dispatch = useDispatch()\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    \r\n    const debouncedSearchTerm = useDebounce(searchTerm, 700)\r\n    \r\n    useEffect(() => {\r\n        if (!searchTerm) {\r\n        dispatch(isShowImageAC(false))\r\n    }\r\n    },[searchTerm])\r\n\r\n    useEffect(() => {\r\n            if (debouncedSearchTerm) {\r\n                dispatch(setOptionsAC({page: 1, text: debouncedSearchTerm}))\r\n                dispatch(getCardsTC())\r\n            }\r\n        }, [debouncedSearchTerm]\r\n    )\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTerm(e.currentTarget.value)\r\n    }\r\n    \r\n    return (\r\n        <Grid container style={{padding: \"30px\"}}>\r\n            <TextField\r\n                id=\"standard-textarea\"\r\n                label=\"Find pictures\"\r\n                multiline\r\n                style={{width: \"100%\"}}\r\n                onChange={onChangeHandler}\r\n            />\r\n        </Grid>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value: string, delay: number) => {\r\n\r\n    const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n    useEffect( () => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay)\r\n        return () => {\r\n            clearTimeout(handler)\r\n        }\r\n    }, [value])\r\n\r\n    return debouncedValue\r\n}","import { Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ImagePage } from '../imagePage/ImagePage';\r\nimport {SearchForm} from '../searchForm/SearchForm';\r\n\r\nexport const PhotoFinderPage = () => {\r\n    return (\r\n        <Container fixed>\r\n            <SearchForm/>\r\n            <ImagePage/>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport { routes } from '../../router/routes';\r\nimport { BookmarksPage } from '../bookmarksPage/BookmarksPage';\r\nimport { PhotoFinderPage } from '../photoFinderPage/PhotoFinderPage';\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={routes.photoFinder} render={() => <PhotoFinderPage/>}/>\r\n                <Route exact path={routes.bookmarks} render={() => <BookmarksPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/header/Header\";\nimport {AppBar, Container, Grid, IconButton, Paper, Toolbar, Typography} from \"@material-ui/core\";\nimport {SearchForm} from './components/searchForm/SearchForm';\nimport { ImagePage } from './components/imagePage/ImagePage';\nimport { Content } from './components/content/Content';\n\nfunction App() {\n    return (\n        <div>\n            <Header/>\n            <Content/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport {imageReducer} from \"./image-reducer\"\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { bookmarksReducer } from \"./bookmarks-reducer\"\r\nimport { loadState, saveState } from \"./utils/localstorage-utils\"\r\n\r\nconst rootReducer = combineReducers({\r\n    image: imageReducer,\r\n    bookmarks: bookmarksReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, loadState(), applyMiddleware(thunkMiddleware), )\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        bookmarks: store.getState().bookmarks\r\n    })\r\n})\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import { AppRootStateType } from \"../store\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('app-state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('app-state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n} ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoBox\":\"ImageItem_photoBox__G__dm\"};"],"sourceRoot":""}